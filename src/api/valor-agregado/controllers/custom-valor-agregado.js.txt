"use strict";

const fs = require("fs");
const path = require("path");
const { createCoreController } = require("@strapi/strapi").factories;

module.exports = createCoreController("api::valor-agregado.valor-agregado", ({ strapi }) => ({
  async createCustom(ctx) {
    const user = ctx.state.user; // Obtener el usuario autenticado

    if (!user) {
      return ctx.unauthorized("Usuario no autenticado");
    }

    // Verificar y obtener los archivos y datos del cuerpo de la solicitud
    const { files } = ctx.request;
    const data = ctx.request.body;

    if (!data) {
      return ctx.badRequest("Los datos del cuerpo de la solicitud son requeridos");
    }

    const { Titulo } = data;
console.log(Titulo);
    if (!files || !files["files.PDF"]) {
      return ctx.badRequest("El archivo PDF es requerido");
    }

    if (!Titulo) {
      return ctx.badRequest("El título es requerido");
    }

    const pdfFile = files["files.PDF"];
    const pdfName = `valor_agregado_${Date.now()}_${pdfFile.name}`;
    const privateFolderPath = path.join(__dirname, "..", "..", "private", "pdfs");
    
    // Crear la carpeta si no existe
    if (!fs.existsSync(privateFolderPath)) {
      fs.mkdirSync(privateFolderPath, { recursive: true });
    }
    
    const filePath = path.join(privateFolderPath, pdfName);
  
    // Mover el archivo a la carpeta privada
    fs.renameSync(pdfFile.path, filePath);
    return false;
    // Crear la entrada en la colección valor-agregado con la URL del archivo PDF
    const newEntry = await strapi.db.query("api::valor-agregado.valor-agregado").create({
      data: {
        Titulo,
        PDF: filePath, // Guardar la ruta del archivo en el campo PDF
      },
    });

    // Retornar la nueva entrada
    return newEntry;
  },
}));
